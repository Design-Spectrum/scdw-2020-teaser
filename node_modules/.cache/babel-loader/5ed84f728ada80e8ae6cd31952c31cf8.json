{"ast":null,"code":"import _slicedToArray from \"/Users/jinjaelee/Projects/scdw-2020-teaser/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jinjaelee/Projects/scdw-2020-teaser/src/components/Glitch.js\";\nimport React, { Suspense, useRef } from \"react\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"drei\";\nimport { Color } from \"three\";\n\nfunction LoadModel(_ref) {\n  var props = _ref.props,\n      url = _ref.url,\n      pos = _ref.pos,\n      value = _ref.value,\n      color = _ref.color,\n      wireframe = _ref.wireframe;\n\n  var _useLoader = useLoader(GLTFLoader, url),\n      scene = _useLoader.scene;\n\n  useFrame(function () {\n    return ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z += value;\n  });\n  var ref = useRef();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  scene.children[0].material.wireframe = state; //   scene.children[0].material.vertexColors = true;\n\n  scene.children[0].material.color = new Color(color); //   scene.children[0].material.emissive = new Color(color)\n  //   scene.children[0].material.emissiveIntensity = .4\n  //   scene.children[0].material.metalness = 2\n\n  console.log(scene);\n  return /*#__PURE__*/React.createElement(\"group\", Object.assign({}, props, {\n    dispose: null,\n    onClick: function onClick() {\n      return setState(!state);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: scene,\n    scale: [1, 1, 2],\n    position: pos,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport function Glitch() {\n  useFrame(function () {\n    return ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z += 0.1;\n  });\n  var ref = useRef();\n  return /*#__PURE__*/React.createElement(Canvas, {\n    camera: {\n      position: [0, 0, 200]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [0, 0, 300],\n    intensity: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OrbitControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoadModel, {\n    url: \"./obj1.glb\",\n    pos: [-180, 0, 0],\n    value: 0.001,\n    color: 0xfcff23,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LoadModel, {\n    url: \"./obj2.glb\",\n    pos: [-60, 0, 0],\n    value: -0.002,\n    color: 0x65fc7b,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LoadModel, {\n    url: \"./obj3.glb\",\n    pos: [60, 0, 0],\n    value: 0.002,\n    color: 0x22bffc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LoadModel, {\n    url: \"./obj4.glb\",\n    pos: [180, 0, 0],\n    value: -0.001,\n    color: 0x008cff,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n}\nexport function GlitchPage() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-glitch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-bg-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-text-test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"SPECTRUM CON DESIGN WEEK 2020\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), \"A WHOLE NEW WORLD\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Glitch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/jinjaelee/Projects/scdw-2020-teaser/src/components/Glitch.js"],"names":["React","Suspense","useRef","Canvas","useFrame","useLoader","GLTFLoader","OrbitControls","Color","LoadModel","props","url","pos","value","color","wireframe","scene","ref","current","rotation","x","y","z","useState","state","setState","children","material","console","log","Glitch","position","GlitchPage"],"mappings":"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","sourcesContent":["import React, { Suspense, useRef } from \"react\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"drei\";\nimport { Color } from \"three\";\n\nfunction LoadModel({ props, url, pos, value, color, wireframe }) {\n  const { scene } = useLoader(GLTFLoader, url);\n  useFrame(\n    () =>\n      (ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z += value)\n  );\n  const ref = useRef();\n  const [state, setState] = React.useState(false);\n\n  scene.children[0].material.wireframe = state;\n  //   scene.children[0].material.vertexColors = true;\n  scene.children[0].material.color = new Color(color);\n  //   scene.children[0].material.emissive = new Color(color)\n  //   scene.children[0].material.emissiveIntensity = .4\n  //   scene.children[0].material.metalness = 2\n\n  console.log(scene);\n\n  return (\n    <group {...props} dispose={null} onClick={() => setState(!state)}>\n      <primitive object={scene} scale={[1, 1, 2]} position={pos} ref={ref} />\n    </group>\n  );\n}\n\nexport function Glitch() {\n  useFrame(\n    () =>\n      (ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z += 0.1)\n  );\n  const ref = useRef();\n\n  return (\n    <Canvas camera={{ position: [0, 0, 200] }}>\n      <ambientLight intensity={2} />\n      <pointLight position={[0, 0, 300]} intensity={2} />\n      <OrbitControls />\n      <Suspense fallback={null} ref={ref}>\n        <LoadModel\n          url=\"./obj1.glb\"\n          pos={[-180, 0, 0]}\n          value={0.001}\n          color={0xfcff23}\n        />\n        <LoadModel\n          url=\"./obj2.glb\"\n          pos={[-60, 0, 0]}\n          value={-0.002}\n          color={0x65fc7b}\n        />\n        <LoadModel\n          url=\"./obj3.glb\"\n          pos={[60, 0, 0]}\n          value={0.002}\n          color={0x22bffc}\n        />\n        <LoadModel\n          url=\"./obj4.glb\"\n          pos={[180, 0, 0]}\n          value={-0.001}\n          color={0x008cff}\n        />\n      </Suspense>\n    </Canvas>\n  );\n}\n\nexport function GlitchPage() {\n  return (\n    <div className=\"container-glitch\">\n      <div className=\"container-bg-text\">\n        <div className=\"bg-text-test\">\n          SPECTRUM CON DESIGN WEEK 2020\n          <br />A WHOLE NEW WORLD\n        </div>\n      </div>\n      <div className=\"canvas\">\n        <Glitch />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}